<?php

/**
 * @file
 * Functions to support theming.
 */

declare(strict_types = 1);

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook__preprocess_links__language_block().
 */
function oe_whitelabel_preprocess_links__language_block(&$variables) {
  $currentLanguage = \Drupal::languageManager()->getCurrentLanguage();
  $current_language_id = $currentLanguage->getId();
  $language_config_storage = \Drupal::entityTypeManager()->getStorage('configurable_language');
  $eu_links = [];
  $non_eu_links = [];

  foreach ($variables['links'] as $language_code => $link) {
    /** @var \Drupal\Core\Url $url */
    $url = $link['link']['#url'];
    $href = $url
      ->setOptions($link['link']['#options'])
      ->setAbsolute(TRUE)
      ->toString();
    $label = $link['link']['#title'];

    $link = [
      'href' => $href,
      'name' => $label,
      'id' => 'link_' . $language_code,
      'hreflang' => $language_code,
    ];

    if (!empty($current_language_id) && $language_code === $current_language_id) {
      $variables['language']['link'] = $link;
      $variables['language']['link']['target'] = 'languageModal';
      $link['active'] = TRUE;
    }

    $language_config = $language_config_storage->load($language_code);
    $category = $language_config->getThirdPartySetting('oe_multilingual', 'category');

    if ($category === 'eu') {
      $eu_links[$language_code] = $link;
    }
    else {
      $non_eu_links[$language_code] = $link;
    }
  }

  $variables['language']['modal'] = [
    'id' => 'languageModal',
    'size' => 'fullscreen',
    'header' => [
      'title' => t('Select your language'),
      'label' => t('Close'),
    ],
    'eu_links' => $eu_links,
    'non_eu_links' => $non_eu_links,
    'footer' => [
      'label' => t('Close'),
    ],
  ];
}

/**
 * Implements hook_form_alter().
 */
function oe_whitelabel_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if (isset($form['actions'])) {
    $form['actions']['#attributes']['class'][] = 'mt-4';
  }
  if (isset($form['actions']['submit'])) {
    $form['actions']['submit']['#attributes']['class'][] = 'me-2';
    array_push($form['actions']['submit']['#attributes']['class'], 'btn', 'btn-primary');
    if (($key = array_search('btn-secondary', $form['actions']['submit']['#attributes']['class'], TRUE)) !== FALSE) {
      unset($form['actions']['submit']['#attributes']['class'][$key]);
    }
  }
  $form['actions']['submit']['#attributes']['class'] = array_unique($form['actions']['submit']['#attributes']['class']);
  if (isset($form['actions']['reset'])) {
    $form['actions']['reset']['#attributes']['class'][] = 'btn';
    $form['actions']['reset']['#attributes']['class'][] = 'btn-secondary';
  }
  $form['actions']['reset']['#attributes']['class'] = array_unique($form['actions']['reset']['#attributes']['class']);
}
